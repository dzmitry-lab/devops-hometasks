pipeline {
	agent any
	tools {
		go 'Go 1.13.15'
	}
	options {
		timestamps ()
	}
	stages {
		stage('Downloading sources from Git') { 
			steps {
				git 'https://github.com/L-Eugene/word-cloud-generator.git'
			}
		}
		stage('Checking code') { 
			steps {
				sh '''export GOPATH=$WORKSPACE
export PATH="$PATH:$(go env GOPATH)/bin"
go get github.com/tools/godep
go get github.com/smartystreets/goconvey
go get github.com/GeertJohan/go.rice/rice
go get github.com/dzmitry-lab/word-cloud-generator/wordyapi
go get github.com/gorilla/mux
make lint
make test
'''
			}
		}
		stage('Building code and uploading artifacts to Nexus') { 
			steps {
				sh '''export GOPATH=$WORKSPACE
export PATH="$PATH:$(go env GOPATH)/bin"
rm -f artifacts/*
ls -la artifacts
sed -i 's/1.DEVELOPMENT/1.$BUILD_NUMBER/g' ./rice-box.go
GOOS=linux GOARCH=amd64 go build -o ./artifacts/word-cloud-generator -v .
gzip ./artifacts/word-cloud-generator
mv ./artifacts/word-cloud-generator.gz ./artifacts/word-cloud-generator
'''
				nexusArtifactUploader artifacts: [[artifactId: 'word-cloud-generator', classifier: '', file: 'artifacts/word-cloud-generator', type: 'gz']], credentialsId: 'nexus-creds', groupId: '1', nexusUrl: '192.168.33.11:8081', nexusVersion: 'nexus3', protocol: 'http', repository: 'word-cloud-builds', version: '1.$BUILD_NUMBER'
			}
		}
		stage('Deploying app on staging') { 
			steps {
				script{
					def remote = [:]
					remote.name = 'staging'
					remote.host = '192.168.33.30'
					remote.user = 'vagrant'
					remote.password = 'vagrant'
					remote.allowAnyHosts = true
					sshCommand remote: remote, command: "sudo systemctl stop wordcloud"
					sshCommand remote: remote, command: "curl -X GET -u admin:admin \"http://192.168.33.11:8081/repository/word-cloud-builds/1/word-cloud-generator/1.${env.BUILD_NUMBER}/word-cloud-generator-1.${env.BUILD_NUMBER}.gz\" -o /opt/wordcloud/word-cloud-generator.gz"
					sshCommand remote: remote, command: "gunzip -f /opt/wordcloud/word-cloud-generator.gz"
					sshCommand remote: remote, command: "chmod +x /opt/wordcloud/word-cloud-generator"
					sshCommand remote: remote, command: "sudo systemctl start wordcloud"
				}
			}
		}
		stage('Running some integration tests'){
			parallel {
                stage('Runnning 1st integration test in parallel') {
					steps {
                        sh '''res=`curl -s -H "Content-Type: application/json" -d '{"text":"ths is a really really really important thing this is"}' http://192.168.33.30:8888/version | jq '. | length'`
if [ "1" != "$res" ]; then
  exit 99
fi
'''
                    }
                }
                stage('Runnning 2nd integration test in parallel') {
					steps {
                        sh '''res=`curl -s -H "Content-Type: application/json" -d '{"text":"ths is a really really really important thing this is"}' http://192.168.33.30:8888/api | jq '. | length'`
if [ "7" != "$res" ]; then
  exit 99
fi
'''
                    }
                }
            }
		}
		stage('Deploying app on production'){
			steps{
				script{
					def remote = [:]
					remote.name = 'production'
					remote.host = '192.168.33.40'
					remote.user = 'vagrant'
					remote.password = 'vagrant'
					remote.allowAnyHosts = true
					sshCommand remote: remote, command: "sudo systemctl stop wordcloud"
					sshCommand remote: remote, command: "curl -X GET -u admin:admin \"http://192.168.33.11:8081/repository/word-cloud-builds/1/word-cloud-generator/1.${env.BUILD_NUMBER}/word-cloud-generator-1.${env.BUILD_NUMBER}.gz\" -o /opt/wordcloud/word-cloud-generator.gz"
					sshCommand remote: remote, command: "gunzip -f /opt/wordcloud/word-cloud-generator.gz"
					sshCommand remote: remote, command: "chmod +x /opt/wordcloud/word-cloud-generator"
					sshCommand remote: remote, command: "sudo systemctl start wordcloud"
				}  
            }
        }
    }
}
