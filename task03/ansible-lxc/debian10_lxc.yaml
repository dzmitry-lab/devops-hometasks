---#Playbook for task03-02 (Debian10 LXC - host configuration)- name: Debian10_lxc provision  connection: local  hosts: all  become: true  tasks:    - name: Ensure needed packages are installed      apt:        pkg:          - lxc          - lxc-templates          - python-lxc          - iptables-persistent          - python-pip          - sshpass       - name: Ensure services are running and enabled      service:        name: "{{ item }}"        state: started        enabled: yes      loop:        - lxc        - lxc-net           - name: Modify /etc/sysctl.conf      lineinfile:        path: /etc/sysctl.conf        regexp: 'kernel.unprivileged_userns_clone=1'        state: present        insertafter: EOF        line: kernel.unprivileged_userns_clone=1    - name: Modify kernel for current session      shell: sysctl kernel.unprivileged_userns_clone=1             - name: Modify /etc/default/grub      replace:        path: /etc/default/grub        regexp: 'GRUB_CMDLINE_LINUX="net.ifnames=0 biosdevname=0 debian-installer=en_US.UTF-8"'        replace: 'GRUB_CMDLINE_LINUX="net.ifnames=0 systemd.legacy_systemd_cgroup_controller=yes biosdevname=0 debian-installer=en_US.UTF-8"'    - name: Updating grub      shell: update-grub    - name: Modify to /etc/lxc/default.conf      copy:        dest: /etc/lxc/default.conf        content: |          lxc.net.0.type  = veth          lxc.net.0.flags = up          lxc.net.0.link  = lxcbr0    - name: Modify to /etc/lxc/lxc-usernet      copy:        dest: /etc/lxc/lxc-usernet        content: |          root veth lxcbr0 10               - name: Modify to /etc/default/lxc-net      copy:        dest: /etc/default/lxc-net        content: |          USE_LXC_BRIDGE="true"          LXC_BRIDGE="lxcbr0"    - name: Restart lxc-net      service:        name: lxc-net        state: restarted            - name: Forward port 80 to 10.0.3.55:80      iptables:        table: nat        chain: PREROUTING        in_interface: eth0        protocol: tcp        destination_port: '80'        jump: DNAT        to_destination: 10.0.3.55:80     - name: Forward port 81 to 10.0.3.56:80      iptables:        table: nat        chain: PREROUTING        in_interface: eth0        protocol: tcp        destination_port: '81'        jump: DNAT        to_destination: 10.0.3.56:80    - name: Save iptables      shell: iptables-save > /etc/iptables/rules.v4    - name: Creating containers      become: yes      become_user: root      lxc_container:        name: "{{ item.name }}"        container_log: true        template: download        state: started        template_options:  --dist centos --release 7 --arch amd64        container_command: |          useradd vagrant          echo vagrant:vagrant | chpasswd          sed -i 's/dhcp/none/' /etc/sysconfig/network-scripts/ifcfg-eth0          echo "IPADDR={{ item.host }}" >> /etc/sysconfig/network-scripts/ifcfg-eth0          echo "PREFIX=24" >> /etc/sysconfig/network-scripts/ifcfg-eth0          echo "GATEWAY=10.0.3.1" >> /etc/sysconfig/network-scripts/ifcfg-eth0          echo "DNS1=10.0.3.1" >> /etc/sysconfig/network-scripts/ifcfg-eth0          systemctl restart network          sleep 10          yum install -y sudo openssh-server          usermod -a -G wheel vagrant          systemctl start sshd      loop:        - { name: 'centos1', host: '10.0.3.55' }        - { name: 'centos2', host: '10.0.3.56' }    - name: Waiting a little while containers are starting      shell: sleep 10    - name: Checking container key is up to date in known_hosts      become_user: vagrant      shell: ssh-keyscan {{ item }} >> ~/.ssh/known_hosts      loop:        - '10.0.3.55'        - '10.0.3.56'    - name: execute playbook to configure lxc-containers      become_user: vagrant      shell: ansible-playbook -i /vagrant/inventory /vagrant/centos_lxc.yaml | sed 's/\x1B\[[0-9;]\+[A-Za-z]//g'      register: playbook_output      changed_when: playbook_output.stdout_lines[-1] is regex("\schanged=[1-9]\d*\s")    - debug: var=playbook_output.stdout_lines